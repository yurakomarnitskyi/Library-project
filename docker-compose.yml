# version: '3'

# services:
#   db:
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#   web:
#     build: .
#     command: >
#       bash -c "python manage.py migrate && gunicorn -b 0.0.0.0:8000 library.wsgi:application"
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     environment:
#       - DJANGO_DB_HOST=db
#       - DJANGO_DB_PORT=5432
#       - DJANGO_DB_NAME=postgres
#       - DJANGO_DB_USER=postgres
#       - DJANGO_DB_PASSWORD=postgres
#     depends_on:
#       - db

# version: '3'

# services:
#   db:
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#   web:
#     build: .
#     command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     environment:
#       - DJANGO_DB_HOST=db
#       - DJANGO_DB_PORT=5432
#       - DJANGO_DB_NAME=postgres
#       - DJANGO_DB_USER=postgres
#       - DJANGO_DB_PASSWORD=postgres
#     depends_on:
#       - db

version: '3'

services:
  web:
    build: .
    container_name: library
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: ["sh", "-c", "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

  db:
    image: postgres:14
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    container_name: db

